shell 
	在计算机科学中，shell就是一个命令解释器。

分类
	图形式的shell --》桌面
	命令行式的shell--》操作终端


编写脚本
	vim itcast.sh

	#!/bin/bash
	#这是一个临时命令脚本
	echo 'i love'
	echo 'itcast'

执行脚本
	/bin/bash itcast.sh

单行注释
	#
多行注释
	<<!.....!

验证有没有这个变量名
	echo $666. #验证有没有666

定义变量
	hah = a 变量值必须是一个整体
	echo $hah 输出a
	变量‘=’前后不要加空格
	hah = 'a' 看到什么内容就输出什么内容
	hah = "a" 如果变量值范围内，有可以解析的变量A 先解析变量A 

本地变量用小写，全局变量用大写。

命令变量 
	1.变量名=·命令·
		· 是反引号 键盘左上角
	2.变量名=$(命令) #工作中常用的

全局变量：
	env 查看所有的全局变量
	env | grep SHELL 

	定义全局变量：变量名用大写的字符表示
	ITCAST='nihao'
	export  ITCAST

	export ITCAST='nihao'  推荐使用这个定义方式

变量的查看和取消：
	echo $ITCAST     #私下常用的
	echo "$ITCAST"   #私下常用的
	echo ${ITCAST}   #脚本中中常用的
	echo ${ITCAST}。 #脚本中最好的方式
	
删除变量名
	unset XXX. #可以删除全局变量和本地变量

内置变量：
	获取当前执行脚本的变量名 --》$0 
	获取当前脚本的第n个参数-->$n
	获取脚本传参总个数---》$#
	获取执行上一个命令的返回值---》$?

字符串精确截取
	格式：${变量名：起始位置：截取长度}

默认值：
	变量名瑞哦有内容 那么就输出A的变量值
	变量A如果没有内容 那么就输出默认的内容
	格式：
		${变量名：-默认值}

	无论变量A是否有内容，都输出默认值
		格式：
			${变量名+默认值}




shell进阶

表达式：
	测试语句：
		test 条件表达式
			test 1=1
			echo $?
		[ 条件表达式 ]. #注意[]两边一定要有空格		
			[ 1 = 1 ]
			echo $?
 		 
 		 a=b 赋值的意思
 		 a = b 判断的意思

 	条件表达式：
 		逻辑表达式：
 			&& ：  命令1 && 命令2
 				命令1执行成功，命令2才执行

 			||：命令1 || 命令2
 				命令1执行失败，命令2才执行

 	文件表达式：
 		-f  判断输入内容是否是一个文件
 		-d  判断输入内容是否是一个目录
 		-x  判断输入内容是否可执行

 	数值操作符
 		n1 -eq n2	等于
 		n1 -gt n2	大于
 		n1 -lt n2	小于
 		n1 -ne n2	不等于

 	字符串比较
 		str1 == str2  str1和str2字符串内容一致
 		str1 != str2  str1和str2字符串内容不一致

 	计算表达式：
 		$(()) 用加减乘除做整数运算
 		let  
 			let 变量名a=变量a+1  注意：等号两边不能有空格

 Linux 常见符号
 	重定向符号：
 		>  表示左侧的内容以覆盖的方式输入到右侧文件中
 		>>  表示左侧的内容追加到右侧的文件中

 	管道符号：
 		|   命令1 | 命令2
 			将左侧命令1执行的结果传给命令2来使用
 			env  |  grep root
 			grep：过滤 

 其他符号：
 	后台展示符号 &
 		将一个命令从前台转到后台执行
 	sleep 4：界面卡住4秒后消失
 		sleep 4 & ：后台睡4秒

 home/.bashrc 	中定义了系统自带的全局变量 



2>&1


 linux 系统垃圾桶
 	／dev/null 黑洞 是linux 下的一个设备文件，这个文件类似于一个垃圾桶，特点是容量无限大


grep[参数][关键字]<文件名> :
	-c :只输出匹配行的计数。 count 	
	-n：显示匹配行及行号	  number
	-v：显示不包含匹配的所有行

	grep -c aaa 111.txt
		查找111.txt中的aaa的所有字符。


sed:行文件编辑工具，因为它编辑文件是以行为单位的。
	sed [参数]'<><>'[文件名]
	-a
	-i  
	-s
	

day 2 ------------------------------------------

awk '{print$1,$3}' awk.txt
	打印awk.txt中的第一行和第三行

Find 
    Find[路径][参数][关键字]
    -name 按照文件名查找文件
    -perm 按照文件权限来查找文件
    -user  按照文件所属的组来查找文件
    -group 按照文件所属的组来查找文件
    -type 查找某一类的文件

单分支if 语句
    if[条件]
    Then
    	指令
    fi

 在shell中缩紧就是为了好看 没有别的意思


双分枝语句
 	if []
 	then
 		指令
 	else
 		指令
 	fi

多分支语句
	if[]
	then
		指令
	elif []
	then
		指令
	else
		指令
	fi	

手工发布代码  步行
	慢 干扰因素多 不安全

脚本发布代码  坐车
	快 干扰因素少 安全

代码发布流程
	获取代码
	打包代码
	传输代码
	停止应用
	解压代码
	放置代码
	开启应用
	检查效果
	对外访问

代码仓库：
	集中式：
		svn:所有的操作命令都集中在我和代码仓库服务器处于网络连接状态
	分布式：
		git：所有操作命令都可以在本地完成 和代码仓库服务器是否连接无关

	公司的代码仓库
		私有仓库 

		传输方式：
			有网
				git ftp scp 共享挂载 cp rsync
			物理
				u盘 

		关闭应用
			先关闭离客户近的。后关闭离客户远的

		解压
			tar



登陆主机只输入一次密码
	ssh -keygen -t rsa  生成你要文件
	cd /root/.ssh/
	cat rsa.pub


RSA 非对称算法。
	加密的算法和解密的方法不一样，解决陌生人之间通讯的关系。
	也有公钥私钥，私钥加密，公钥解密。
	不可信环境下 怎么解决两个陌生人之间的通信保密。

中间人攻击：a---c---b

颁发者：

证书：卡巴斯基可以颁发证书，根证书颁发机构，系统内置了根证书，

如果提示添加根证书 不要同意。













































































